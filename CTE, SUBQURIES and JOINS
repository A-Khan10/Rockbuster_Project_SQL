The following queries and subquries were made with CTE and joins to answer business questions by Rockbuster Management Board.


Query:
--The top 10 countries for Rockbuster in terms of customer numbers.
SELECT D.country,	
       COUNT(customer_id)	
	   FROM customer A
INNER JOIN address B ON A.address_id = B.address_id	
INNER JOIN city C ON B.city_id = C.city_id	
INNER JOIN country D ON C.country_id = D.country_id	
GROUP BY country	
ORDER BY COUNT (customer_id) DESC	
LIMIT 10	

Query:
--The top 10 cities that fall within the top 10 countries.
SELECT C.city, D.country, COUNT (customer_id) AS count_of_customers						
FROM customer A						
INNER JOIN address B ON A.address_id = B.address_id						
INNER JOIN city C ON B.city_id = C.city_id						
INNER JOIN country D on C.country_id = D.country_id						
WHERE D.country IN						
(SELECT D.country						
FROM customer A						
INNER JOIN address B ON A.address_id = B.address_id						
INNER JOIN city C ON B.city_id = C.city_id						
INNER JOIN country D on C.country_id = D.country_id						
GROUP BY country						
ORDER BY COUNT (customer_id) DESC						
LIMIT 10)						
GROUP BY D.country, C.city						
ORDER BY COUNT (customer_id) DESC						
LIMIT 10					

Query:
--The top 5 customers in the top 10 cities who’ve paid the highest total amounts to Rockbuster.
SELECT A.customer_id, A.first_name, A.last_name, c.city, d.country, SUM(amount) AS total_amount_paid
FROM customer A
INNER JOIN address B ON A.address_id = B.address_id
INNER JOIN city C ON b.city_id = c.city_id
INNER JOIN country D ON c.country_id = d.country_id
INNER JOIN payment E ON A.customer_id = E.customer_id
WHERE c.city IN(SELECT C.city
FROM customer A
INNER JOIN address B ON A.address_id = B.address_id
INNER JOIN city C ON B.city_id = C.city_id
INNER JOIN country D on C.country_id = D.country_id
WHERE D.country IN
(SELECT D.country
FROM customer A
INNER JOIN address B ON A.address_id = B.address_id
INNER JOIN city C ON B.city_id = C.city_id
INNER JOIN country D on C.country_id = D.country_id
GROUP BY country
ORDER BY COUNT (customer_id) DESC
LIMIT 10)
GROUP BY D.country, C.city
ORDER BY COUNT (customer_id) DESC
LIMIT 10)
GROUP BY A.customer_id, A.first_name, A.last_name, c.city, d.country
ORDER BY total_amount_paid DESC
LIMIT 5


Query:
--The average amount paid by top 5 customers:
SELECT AVG(total_amount_paid) AS "average"
FROM
(SELECT A.customer_id, A.first_name, A.last_name, C.city, D.country,
SUM (E.amount) AS "total_amount_paid"
FROM customer A
INNER JOIN address B ON A.address_id = B.address_id
INNER JOIN city C ON B.city_id = C.city_id
INNER JOIN country D ON C.country_ID = D.country_ID
INNER JOIN payment E ON A.customer_id = E.customer_id
WHERE city IN ('Aurora', 'Uttarpara-Kotrung'
, 'Taguig', 'Pangkal Pinang', 'Amroha', 'Eskisehir', 'Iligan','Bhuswal', 'Saint Louis', 'Iwatsukil')
GROUP BY A.customer_id, first_name, last_name, country, city
ORDER BY "total_amount_paid" DESC
LIMIT 5) AS total_amount_paid;

Query:
-- The lowest 10 rented movies.
WITH lowest_rented_films AS 
(SELECT f.title, f.rental_rate, c.name AS category,
 COUNT(r.rental_id) AS rental_count
  FROM film f
  JOIN inventory i ON f.film_id = i.film_id
  JOIN rental r ON i.inventory_id = r.inventory_id
  JOIN film_category fc ON f.film_id = fc.film_id
  JOIN category c ON fc.category_id = c.category_id
  GROUP BY f.title, f.rental_rate, c.name
  ORDER BY rental_count ASC
  LIMIT 10)
SELECT title, rental_rate, category
FROM lowest_rented_films;


Query:
--The top 10 highest rented movies.
WITH highest_rented_films AS (SELECT f.title, f.rental_rate, c.name AS category, COUNT(r.rental_id) AS rental_count
  FROM film f
  JOIN inventory i ON f.film_id = i.film_id
  JOIN rental r ON i.inventory_id = r.inventory_id
  JOIN film_category fc ON f.film_id = fc.film_id
  JOIN category c ON fc.category_id = c.category_id
  GROUP BY f.title, f.rental_rate, c.name
  ORDER BY rental_count DESC
  LIMIT 10)
SELECT title, rental_rate, category
FROM highest_rented_films;


Query:
--The highest rental duration of the Top 10 movies by category.
SELECT
  c.name AS category,
  COUNT(r.rental_id) AS rental_count,
  AVG(f.rental_duration) AS average_rental_duration,
  CORR(f.rental_duration, c.category_id) AS correlation
FROM
  film f
JOIN
  film_category fc ON f.film_id = fc.film_id
JOIN
  category c ON fc.category_id = c.category_id
LEFT JOIN
  rental r ON f.film_id = r.inventory_id
GROUP BY
  c.name, c.category_id
ORDER BY
  average_rental_duration DESC
LIMIT 10;


Query:
--Total Sale and Revenue.
SELECT
    f.title AS film_title,
    SUM(p.amount) AS total_sales,
    SUM(f.rental_rate) * COUNT(r.rental_id) AS total_revenue,
    c.name AS category,
    cy.country AS country
FROM
    film AS f
JOIN
    inventory AS i ON f.film_id = i.film_id
JOIN
    rental AS r ON i.inventory_id = r.inventory_id
JOIN
    payment AS p ON r.rental_id = p.rental_id
JOIN
    film_category AS fc ON f.film_id = fc.film_id
JOIN
    category AS c ON fc.category_id = c.category_id
JOIN
    store AS s ON i.store_id = s.store_id
JOIN
    address AS a ON s.address_id = a.address_id
JOIN
    city AS ct ON a.city_id = ct.city_id
JOIN
    country AS cy ON ct.country_id = cy.country_id
GROUP BY
    f.title, c.name, cy.country
ORDER BY
    total_sales DESC
LIMIT 10;





