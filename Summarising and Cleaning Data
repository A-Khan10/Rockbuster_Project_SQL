The following queries are used to Summarizing and clean data in the Rockbuster Data Sets. The queries also include descriptive statistics of the data sets.

Queries:
#Checking for Duplicate data:
SELECT film_id, title, description, release_year, language_id, rental_duration, rental_rate, length, replacement_cost, rating, last_update, special_features, fulltext, COUNT(*)
FROM film
GROUP BY film_id, title, description, release_year, language_id, rental_duration, rental_rate, length, replacement_cost, rating, last_update, special_features, fulltext HAVING COUNT(*) >1

SELECT customer_id, store_id, first_name, last_name, email, address_id, activebool, create_date, last_update, active, COUNT(*)
FROM customer
GROUP BY customer_id, store_id, first_name, last_name, email, address_id, activebool, create_date, last_update, active
HAVING COUNT(*)>1


#Checking for non-uniform data:
SELECT DISTINCT film_id, title, release_year, rental_duration, length, replacement_cost, rating, FROM film
GROUP BY film_id, title, release_year, rental_duration, length, replacement_cost, rating ORDER BY rating

SELECT DISTINCT customer_id, store_id, first_name, last_name, email, address_id, activebool, create_date, last_update, active, COUNT(*) FROM customer
GROUP BY customer_id, store_id, first_name, last_name, email, address_id, activebool, create_date, last_update, active ORDER BY customer_id



#Checking for missing data:
SELECT film_id, title, description, release_year, language_id, rental_rate, length, replacement_cost, last_update, special_features, fulltext, COUNT(*) FROM film
GROUP BY ilm_id, title, description, release_year, language_id, rental_rate, length, replacement_cost, last_update, special_features, fulltext
HAVING COUNT(*) = NULL OR COUNT (*) <1 -- no result means there are no missing values or zero's


SELECT customer_id, store_id, first_name, last_name, email, address_id, activebool, create_date, last_update, active, COUNT(*) FROM customer
GROUP BY customer_id, store_id, first_name, last_name, email, address_id, activebool, create_date, last_update, active
HAVING COUNT (*) = NULL OR COUNT (*) <1 -- no result means there are no missing values or zero's



#Film Table Descriptive Statistics:
Select MIN(rental_duration) AS min_rental_duration,					
MAX(rental_duration) AS max_rental_duration,					
AVG(rental_duration) AS avg_rental_duration,					
COUNT(rental_duration)AS count_rental_duration,
COUNT(*) AS count_rows,
MIN(rental_rate) AS min_rental_rate,					
MAX(rental_rate) AS max_rental_rate,					
AVG(rental_rate) AS avg_rental_rate,					
COUNT(rental_rate) AS count_rental_rate,
COUNT(*) AS count_rows,
MIN(length) AS min_length,					
MAX(length) AS max_length,					
AVG(length) AS avg_length,					
COUNT(length) AS count_length,
COUNT(*) AS count_rows,
MIN(replacement_cost) AS min_replacement_cost,					
MAX(replacement_cost) AS max_replacement_cost,					
AVG(replacement_cost) AS avg_replacement_cost,					
COUNT(replacement_cost) As count_replacement_cost,					
COUNT(*) AS count_rows
FROM film

# Film Table non-numerical Descriptive Statistics:
SELECT MODE() WITHIN GROUP (ORDER BY title) AS title_modal_value,
MODE() WITHIN GROUP (ORDER BY film_id) AS film_id_modal_value,
MODE() WITHIN GROUP (ORDER BY description) AS description_modal_value,					
MODE() WITHIN GROUP (ORDER BY release_year)AS release_year_modal_value,					
MODE() WITHIN GROUP (ORDER BY rating) AS rating_modal_value,					
MODE() WITHIN GROUP (ORDER BY special_features) AS special_features_value, 					
MODE() WITHIN GROUP (ORDER BY last_update) AS last_update_modal_value,					
MODE() WITHIN GROUP (ORDER BY fulltext) AS fulltext_modal_value					
FROM film


# Customer Table non-numerical Descriptive Statistics:
SELECT MODE() WITHIN GROUP (ORDER BY customer_id) AS customer_id_modal_value,
MODE() WITHIN GROUP (ORDER BY store_id) AS store_id_modal_value
MODE() WITHIN GROUP (ORDER BY first_name) AS first_name_modal_value
MODE() WITHIN GROUP (ORDER BY last_name) AS last_name_modal_value, 
MODE() WITHIN GROUP (ORDER BY create_date) AS create_date_modal_value,
MODE() WITHIN GROUP (ORDER BY last_update) AS last_update_modal_value, 
MODE() WITHIN GROUP (ORDER BY active) AS active_modal_value
FROM customer 
